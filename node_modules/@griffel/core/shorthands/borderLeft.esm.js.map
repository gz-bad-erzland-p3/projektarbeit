{"version":3,"file":"borderLeft.esm.js","sources":["../../../../packages/core/src/shorthands/borderLeft.ts"],"sourcesContent":["import type { GriffelStylesStrictCSSObject } from '../types';\nimport { BorderColorInput, BorderStyleInput, BorderWidthInput } from './types';\n\ntype BorderLeftStyle = Pick<GriffelStylesStrictCSSObject, 'borderLeftColor' | 'borderLeftStyle' | 'borderLeftWidth'>;\n\nexport function borderLeft(width: BorderWidthInput): BorderLeftStyle;\nexport function borderLeft(width: BorderWidthInput, style: BorderStyleInput): BorderLeftStyle;\nexport function borderLeft(width: BorderWidthInput, style: BorderStyleInput, color: BorderColorInput): BorderLeftStyle;\n\n/**\n * A function that implements expansion for \"border-left\", it's simplified - check usage examples.\n *\n * @example\n *  borderLeft('2px')\n *  borderLeft('2px', 'solid')\n *  borderLeft('2px', 'solid', 'red')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-left\n */\nexport function borderLeft(...values: [BorderWidthInput, BorderStyleInput?, BorderColorInput?]): BorderLeftStyle {\n  return {\n    borderLeftWidth: values[0],\n    ...(values[1] && ({ borderLeftStyle: values[1] } as GriffelStylesStrictCSSObject)),\n    ...(values[2] && { borderLeftColor: values[2] }),\n  };\n}\n"],"names":["borderLeft","values","borderLeftWidth","borderLeftStyle","borderLeftColor"],"mappings":"AASA;;;;;;;;;;SAUgBA,WAAW,GAAGC;EAC5B;IACEC,eAAe,EAAED,MAAM,CAAC,CAAD;KACnBA,MAAM,CAAC,CAAD,CAAN,IAAc;IAAEE,eAAe,EAAEF,MAAM,CAAC,CAAD;MACvCA,MAAM,CAAC,CAAD,CAAN,IAAa;IAAEG,eAAe,EAAEH,MAAM,CAAC,CAAD;IAH5C;AAKD;;;;"}