{"version":3,"file":"store.esm.js","sources":["../../../../packages/core/src/devtools/store.ts"],"sourcesContent":["import type { SequenceHash } from '../types';\nimport { SEQUENCE_PREFIX, SEQUENCE_SIZE } from '../constants';\nimport { mergeClassesCachedResults } from '../mergeClasses';\n\nconst sequenceDetails: Record<SequenceHash, { slotName: string; sourceURL?: string }> = {};\n\nconst cssRules = new Set<string>();\n\nexport const debugData = {\n  getChildrenSequences: (debugSequenceHash: SequenceHash): SequenceHash[] => {\n    const key = Object.keys(mergeClassesCachedResults).find(key =>\n      mergeClassesCachedResults[key].startsWith(debugSequenceHash),\n    );\n\n    if (key) {\n      // key of the mergeClasses cache contains merge order\n      return key\n        .split(SEQUENCE_PREFIX)\n        .filter(sequence => sequence.length)\n        .map(sequence => SEQUENCE_PREFIX + sequence);\n    }\n\n    return [];\n  },\n\n  addCSSRule: (rule: string) => {\n    cssRules.add(rule);\n  },\n  addSequenceDetails: <Slots extends string | number>(\n    classNamesForSlots: Record<Slots, string>,\n    sourceURL?: string,\n  ) => {\n    Object.entries<string>(classNamesForSlots).forEach(([slotName, sequenceHash]) => {\n      sequenceDetails[sequenceHash.substring(0, SEQUENCE_SIZE)] = { slotName, sourceURL };\n    });\n  },\n\n  getCSSRules: (): string[] => {\n    return Array.from(cssRules);\n  },\n  getSequenceDetails: (sequenceHash: SequenceHash): typeof sequenceDetails[string] | undefined => {\n    return sequenceDetails[sequenceHash];\n  },\n};\n"],"names":["sequenceDetails","cssRules","Set","debugData","getChildrenSequences","debugSequenceHash","key","Object","keys","mergeClassesCachedResults","find","startsWith","split","SEQUENCE_PREFIX","filter","sequence","length","map","addCSSRule","rule","add","addSequenceDetails","classNamesForSlots","sourceURL","entries","forEach","slotName","sequenceHash","substring","SEQUENCE_SIZE","getCSSRules","Array","from","getSequenceDetails"],"mappings":";;;AAIA,MAAMA,eAAe,GAAmE,EAAxF;AAEA,MAAMC,QAAQ,gBAAG,IAAIC,GAAJ,EAAjB;MAEaC,SAAS,GAAG;EACvBC,oBAAoB,EAAGC,iBAAD;IACpB,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYC,yBAAZ,EAAuCC,IAAvC,CAA4CJ,GAAG,IACzDG,yBAAyB,CAACH,GAAD,CAAzB,CAA+BK,UAA/B,CAA0CN,iBAA1C,CADU,CAAZ;;IAIA,IAAIC,GAAJ,EAAS;;MAEP,OAAOA,GAAG,CACPM,KADI,CACEC,eADF,EAEJC,MAFI,CAEGC,QAAQ,IAAIA,QAAQ,CAACC,MAFxB,EAGJC,GAHI,CAGAF,QAAQ,IAAIF,eAAe,GAAGE,QAH9B,CAAP;;;IAMF,OAAO,EAAP;GAdqB;EAiBvBG,UAAU,EAAGC,IAAD;IACVlB,QAAQ,CAACmB,GAAT,CAAaD,IAAb;GAlBqB;EAoBvBE,kBAAkB,EAAE,CAClBC,kBADkB,EAElBC,SAFkB;IAIlBhB,MAAM,CAACiB,OAAP,CAAuBF,kBAAvB,EAA2CG,OAA3C,CAAmD,CAAC,CAACC,QAAD,EAAWC,YAAX,CAAD;MACjD3B,eAAe,CAAC2B,YAAY,CAACC,SAAb,CAAuB,CAAvB,EAA0BC,aAA1B,CAAD,CAAf,GAA4D;QAAEH,QAAF;QAAYH;OAAxE;KADF;GAxBqB;EA6BvBO,WAAW,EAAE;IACX,OAAOC,KAAK,CAACC,IAAN,CAAW/B,QAAX,CAAP;GA9BqB;EAgCvBgC,kBAAkB,EAAGN,YAAD;IAClB,OAAO3B,eAAe,CAAC2B,YAAD,CAAtB;;AAjCqB;;;;"}