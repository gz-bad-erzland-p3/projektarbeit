{"version":3,"file":"resolveResetStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveResetStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { RESET_HASH_PREFIX } from '../constants';\nimport { GriffelStyle, GriffelResetStyle, GriffelAnimation } from '../types';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isObject } from './utils/isObject';\nimport { hyphenateProperty } from './utils/hyphenateProperty';\nimport { compileCSSRules, normalizePseudoSelector } from './compileCSS';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\n\n/**\n * @internal\n */\nfunction createStringFromStyles(styles: GriffelResetStyle) {\n  let ltrCSS = '';\n  let rtlCSS = '';\n\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const { key: rtlProperty, value: rtlValue } = convertProperty(property, value);\n\n      ltrCSS += `${hyphenateProperty(property)}:${value};`;\n      rtlCSS += `${hyphenateProperty(rtlProperty)}:${rtlValue};`;\n\n      continue;\n    }\n\n    if (property === 'animationName' && typeof value === 'object') {\n      const values = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const ltrAnimationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of values) {\n        const ltrKeyframeRule = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeRule = compileKeyframeRule(convert(keyframeObject));\n\n        const ltrAnimationName = RESET_HASH_PREFIX + hashString(ltrKeyframeRule);\n        const rtlAnimationName = RESET_HASH_PREFIX + hashString(rtlKeyframeRule);\n\n        ltrAnimationNames.push(ltrAnimationName);\n        rtlAnimationNames.push(rtlAnimationName);\n\n        ltrCSS += compileKeyframesCSS(ltrAnimationName, ltrKeyframeRule).join('');\n\n        if (ltrAnimationName !== rtlAnimationName) {\n          rtlCSS += compileKeyframesCSS(rtlAnimationName, rtlKeyframeRule).join('');\n        }\n      }\n\n      ltrCSS += `animation-name:${ltrAnimationNames.join(',')};`;\n      rtlCSS += `animation-name:${rtlAnimationNames.join(',')};`;\n\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeResetStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const rtlProperty = rtlDefinitions[0].key;\n\n      ltrCSS += value.map(v => `${hyphenateProperty(property)}:${v};`).join('');\n      rtlCSS += rtlDefinitions.map(definition => `${hyphenateProperty(rtlProperty)}:${definition.value};`).join('');\n\n      continue;\n    }\n\n    if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        const nestedSelector = normalizePseudoSelector(property);\n        const [ltrNested, rtlNested] = createStringFromStyles(value);\n\n        ltrCSS += `${nestedSelector}{${ltrNested}}`;\n        rtlCSS += `${nestedSelector}{${rtlNested}}`;\n\n        continue;\n      }\n\n      if (isMediaQuerySelector(property) || isLayerSelector(property) || isSupportQuerySelector(property)) {\n        const [ltrNested, rtlNested] = createStringFromStyles(value);\n\n        ltrCSS += `${property}{${ltrNested}}`;\n        rtlCSS += `${property}{${rtlNested}}`;\n\n        continue;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.error(`Please fix the unresolved style rule: \\n ${property} \\n ${JSON.stringify(value, null, 2)}\"`);\n    }\n  }\n\n  return [ltrCSS, rtlCSS];\n}\n\n/**\n * @internal\n */\nexport function resolveResetStyleRules(styles: GriffelResetStyle): [string, string | null, string[]] {\n  const [ltrRule, rtlRule] = createStringFromStyles(styles);\n\n  const ltrClassName = RESET_HASH_PREFIX + hashString(ltrRule);\n  const ltrCSS = compileCSSRules(`.${ltrClassName}{${ltrRule}}`);\n\n  if (ltrRule === rtlRule) {\n    return [ltrClassName, null, ltrCSS];\n  }\n\n  const rtlClassName = RESET_HASH_PREFIX + hashString(rtlRule);\n  const rtlCSS = compileCSSRules(`.${rtlClassName}{${rtlRule}}`);\n\n  return [ltrClassName, rtlClassName, ltrCSS.concat(rtlCSS)];\n}\n"],"names":["createStringFromStyles","styles","ltrCSS","rtlCSS","property","value","key","rtlProperty","rtlValue","convertProperty","hyphenateProperty","values","Array","isArray","ltrAnimationNames","rtlAnimationNames","keyframeObject","ltrKeyframeRule","compileKeyframeRule","rtlKeyframeRule","convert","ltrAnimationName","RESET_HASH_PREFIX","hashString","rtlAnimationName","push","compileKeyframesCSS","join","length","process","env","NODE_ENV","console","warn","rtlDefinitions","map","v","rtlPropertyConsistent","some","error","definition","isObject","isNestedSelector","nestedSelector","normalizePseudoSelector","ltrNested","rtlNested","isMediaQuerySelector","isLayerSelector","isSupportQuerySelector","JSON","stringify","resolveResetStyleRules","ltrRule","rtlRule","ltrClassName","compileCSSRules","rtlClassName","concat"],"mappings":"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"}