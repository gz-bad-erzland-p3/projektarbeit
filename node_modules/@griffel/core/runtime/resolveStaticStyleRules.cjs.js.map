{"version":3,"file":"resolveStaticStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStaticStyleRules.ts"],"sourcesContent":["import { GriffelStaticStyles, CSSRulesByBucket } from '../types';\nimport { compileStaticCSS } from './compileStaticCSS';\nimport { compileCSSRules } from './compileCSS';\n\nexport function resolveStaticStyleRules(styles: GriffelStaticStyles, result: CSSRulesByBucket = {}): CSSRulesByBucket {\n  if (typeof styles === 'string') {\n    const cssRules = compileCSSRules(styles);\n\n    for (const rule of cssRules) {\n      addResolvedStyles(rule, result);\n    }\n  } else {\n    // eslint-disable-next-line guard-for-in\n    for (const property in styles) {\n      const value = styles[property];\n      const staticCSS = compileStaticCSS(property, value);\n\n      addResolvedStyles(staticCSS, result);\n    }\n  }\n\n  return result;\n}\n\nfunction addResolvedStyles(cssRule: string, result: CSSRulesByBucket = {}): void {\n  // ðŸ‘‡ static rules should be inserted into default bucket\n  result.d = result.d || [];\n  result.d.push(cssRule);\n}\n"],"names":["resolveStaticStyleRules","styles","result","cssRules","compileCSSRules","rule","addResolvedStyles","property","value","staticCSS","compileStaticCSS","cssRule","d","push"],"mappings":";;;;;;;SAIgBA,wBAAwBC,QAA6BC,SAA2B;EAC9F,IAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;IAC9B,MAAME,QAAQ,GAAGC,0BAAe,CAACH,MAAD,CAAhC;;IAEA,KAAK,MAAMI,IAAX,IAAmBF,QAAnB,EAA6B;MAC3BG,iBAAiB,CAACD,IAAD,EAAOH,MAAP,CAAjB;;GAJJ,MAMO;;IAEL,KAAK,MAAMK,QAAX,IAAuBN,MAAvB,EAA+B;MAC7B,MAAMO,KAAK,GAAGP,MAAM,CAACM,QAAD,CAApB;MACA,MAAME,SAAS,GAAGC,iCAAgB,CAACH,QAAD,EAAWC,KAAX,CAAlC;MAEAF,iBAAiB,CAACG,SAAD,EAAYP,MAAZ,CAAjB;;;;EAIJ,OAAOA,MAAP;AACD;;AAED,SAASI,iBAAT,CAA2BK,OAA3B,EAA4CT,SAA2B,EAAvE;;EAEEA,MAAM,CAACU,CAAP,GAAWV,MAAM,CAACU,CAAP,IAAY,EAAvB;EACAV,MAAM,CAACU,CAAP,CAASC,IAAT,CAAcF,OAAd;AACD;;;;"}