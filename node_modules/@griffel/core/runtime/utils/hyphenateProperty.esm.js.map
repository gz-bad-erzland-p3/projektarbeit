{"version":3,"file":"hyphenateProperty.esm.js","sources":["../../../../../packages/core/src/runtime/utils/hyphenateProperty.ts"],"sourcesContent":["const uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache: Record<string, string> = {};\n\nfunction toHyphenLower(match: string): string {\n  return '-' + match.toLowerCase();\n}\n\nexport function hyphenateProperty(name: string): string {\n  if (Object.prototype.hasOwnProperty.call(cache, name)) {\n    return cache[name];\n  }\n\n  if (name.substr(0, 2) === '--') {\n    return name;\n  }\n\n  const hName = name.replace(uppercasePattern, toHyphenLower);\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName);\n}\n"],"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateProperty","name","Object","prototype","hasOwnProperty","call","substr","hName","replace","test"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,QAAzB;AACA,MAAMC,SAAS,GAAG,MAAlB;AACA,MAAMC,KAAK,GAA2B,EAAtC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB;EACE,OAAO,MAAMA,KAAK,CAACC,WAAN,EAAb;AACD;;SAEeC,kBAAkBC;EAChC,IAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,KAArC,EAA4CK,IAA5C,CAAJ,EAAuD;IACrD,OAAOL,KAAK,CAACK,IAAD,CAAZ;;;EAGF,IAAIA,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,IAA1B,EAAgC;IAC9B,OAAOL,IAAP;;;EAGF,MAAMM,KAAK,GAAGN,IAAI,CAACO,OAAL,CAAad,gBAAb,EAA+BG,aAA/B,CAAd;EACA,OAAQD,KAAK,CAACK,IAAD,CAAL,GAAcN,SAAS,CAACc,IAAV,CAAeF,KAAf,IAAwB,MAAMA,KAA9B,GAAsCA,KAA5D;AACD;;;;"}