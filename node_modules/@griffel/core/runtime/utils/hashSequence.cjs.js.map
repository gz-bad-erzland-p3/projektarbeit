{"version":3,"file":"hashSequence.cjs.js","sources":["../../../../../packages/core/src/runtime/utils/hashSequence.ts"],"sourcesContent":["import hash from '@emotion/hash';\n\nimport { DEBUG_SEQUENCE_SEPARATOR, SEQUENCE_HASH_LENGTH, SEQUENCE_PREFIX } from '../../constants';\nimport { SequenceHash } from '../../types';\n\nfunction padEndHash(value: string): string {\n  const hashLength = value.length;\n\n  if (hashLength === SEQUENCE_HASH_LENGTH) {\n    return value;\n  }\n\n  for (let i = hashLength; i < SEQUENCE_HASH_LENGTH; i++) {\n    value += '0';\n  }\n\n  return value;\n}\n\nexport function hashSequence(\n  classes: string,\n  dir: 'ltr' | 'rtl',\n  sequenceIds: (SequenceHash | undefined)[] = [],\n): SequenceHash {\n  if (process.env.NODE_ENV === 'production') {\n    return SEQUENCE_PREFIX + padEndHash(hash(classes + dir));\n  }\n\n  return (\n    SEQUENCE_PREFIX +\n    padEndHash(hash(classes + dir)) +\n    DEBUG_SEQUENCE_SEPARATOR +\n    padEndHash(hash(sequenceIds.join('')))\n  );\n}\n"],"names":["padEndHash","value","hashLength","length","SEQUENCE_HASH_LENGTH","i","hashSequence","classes","dir","sequenceIds","process","env","NODE_ENV","SEQUENCE_PREFIX","hash","DEBUG_SEQUENCE_SEPARATOR","join"],"mappings":";;;;;;;;;;;AAKA,SAASA,UAAT,CAAoBC,KAApB;EACE,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAzB;;EAEA,IAAID,UAAU,KAAKE,8BAAnB,EAAyC;IACvC,OAAOH,KAAP;;;EAGF,KAAK,IAAII,CAAC,GAAGH,UAAb,EAAyBG,CAAC,GAAGD,8BAA7B,EAAmDC,CAAC,EAApD,EAAwD;IACtDJ,KAAK,IAAI,GAAT;;;EAGF,OAAOA,KAAP;AACD;;SAEeK,aACdC,SACAC,KACAC,cAA4C;EAE5C,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,OAAOC,yBAAe,GAAGb,UAAU,CAACc,8BAAI,CAACP,OAAO,GAAGC,GAAX,CAAL,CAAnC;;;EAGF,OACEK,yBAAe,GACfb,UAAU,CAACc,8BAAI,CAACP,OAAO,GAAGC,GAAX,CAAL,CADV,GAEAO,kCAFA,GAGAf,UAAU,CAACc,8BAAI,CAACL,WAAW,CAACO,IAAZ,CAAiB,EAAjB,CAAD,CAAL,CAJZ;AAMD;;;;"}