{"version":3,"file":"compileKeyframeCSS.esm.js","sources":["../../../../packages/core/src/runtime/compileKeyframeCSS.ts"],"sourcesContent":["import { GriffelAnimation } from '../types';\nimport { compile, middleware, serialize, rulesheet, stringify, prefixer } from 'stylis';\nimport { cssifyObject } from './utils/cssifyObject';\n\nexport function compileKeyframeRule(keyframeObject: GriffelAnimation): string {\n  let css = '';\n\n  // eslint-disable-next-line guard-for-in\n  for (const percentage in keyframeObject) {\n    css += `${percentage}{${cssifyObject(keyframeObject[percentage])}}`;\n  }\n\n  return css;\n}\n\n/**\n * Creates CSS rules for insertion from passed CSS.\n */\nexport function compileKeyframesCSS(keyframeName: string, keyframeCSS: string): string[] {\n  const cssRule = `@keyframes ${keyframeName} {${keyframeCSS}}`;\n  const rules: string[] = [];\n\n  serialize(\n    compile(cssRule),\n    middleware([\n      prefixer,\n      stringify,\n\n      // ðŸ’¡ we are using `.insertRule()` API for DOM operations, which does not support\n      // insertion of multiple CSS rules in a single call. `rulesheet` plugin extracts\n      // individual rules to be used with this API\n      rulesheet(rule => rules.push(rule)),\n    ]),\n  );\n\n  return rules;\n}\n"],"names":["compileKeyframeRule","keyframeObject","css","percentage","cssifyObject","compileKeyframesCSS","keyframeName","keyframeCSS","cssRule","rules","serialize","compile","middleware","prefixer","stringify","rulesheet","rule","push"],"mappings":";;;SAIgBA,oBAAoBC;EAClC,IAAIC,GAAG,GAAG,EAAV;;EAGA,KAAK,MAAMC,UAAX,IAAyBF,cAAzB,EAAyC;IACvCC,GAAG,OAAOC,cAAcC,YAAY,CAACH,cAAc,CAACE,UAAD,CAAf,IAApC;;;EAGF,OAAOD,GAAP;AACD;AAED;;;;SAGgBG,oBAAoBC,cAAsBC;EACxD,MAAMC,OAAO,iBAAiBF,iBAAiBC,cAA/C;EACA,MAAME,KAAK,GAAa,EAAxB;EAEAC,SAAS,CACPC,OAAO,CAACH,OAAD,CADA,EAEPI,UAAU,CAAC,CACTC,QADS,EAETC,SAFS;;;EAOTC,SAAS,CAACC,IAAI,IAAIP,KAAK,CAACQ,IAAN,CAAWD,IAAX,CAAT,CAPA,CAAD,CAFH,CAAT;EAaA,OAAOP,KAAP;AACD;;;;"}