{"version":3,"file":"getStyleBucketName.esm.js","sources":["../../../../packages/core/src/runtime/getStyleBucketName.ts"],"sourcesContent":["import { StyleBucketName } from '../types';\n\n/**\n * Maps the long pseudo name to the short pseudo name. Pseudos that match here will be ordered, everything else will\n * make their way to default style bucket. We reduce the pseudo name to save bundlesize.\n * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.\n */\nconst pseudosMap: Record<string, StyleBucketName | undefined> = {\n  // :focus-within\n  'us-w': 'w',\n  // :focus-visible\n  'us-v': 'i',\n\n  // :link\n  nk: 'l',\n  // :visited\n  si: 'v',\n  // :focus\n  cu: 'f',\n  // :hover\n  ve: 'h',\n  // :active\n  ti: 'a',\n};\n\n/**\n * Gets the bucket depending on the pseudo.\n *\n * Input:\n *\n * ```\n * \":hover\"\n * \":focus:hover\"\n * ```\n *\n * Output:\n *\n * ```\n * \"h\"\n * \"f\"\n * ```\n *\n * @internal\n */\nexport function getStyleBucketName(\n  selectors: string[],\n  layer: string,\n  media: string,\n  support: string,\n): StyleBucketName {\n  if (media) {\n    return 'm';\n  }\n\n  // We are grouping all the at-rules like @supports etc under `t` bucket.\n  if (layer || support) {\n    return 't';\n  }\n\n  if (selectors.length > 0) {\n    const normalizedPseudo = selectors[0].trim();\n\n    if (normalizedPseudo.charCodeAt(0) === 58 /* \":\" */) {\n      // We send through a subset of the string instead of the full pseudo name.\n      // For example:\n      // - `\"focus-visible\"` name would instead of `\"us-v\"`.\n      // - `\"focus\"` name would instead of `\"us\"`.\n      // Return a mapped pseudo else default bucket.\n\n      return (\n        pseudosMap[normalizedPseudo.slice(4, 8)] /* allows to avoid collisions between \"focus-visible\" & \"focus\" */ ||\n        pseudosMap[normalizedPseudo.slice(3, 5)] ||\n        'd'\n      );\n    }\n  }\n\n  // Return default bucket\n  return 'd';\n}\n"],"names":["pseudosMap","nk","si","cu","ve","ti","getStyleBucketName","selectors","layer","media","support","length","normalizedPseudo","trim","charCodeAt","slice"],"mappings":"AAEA;;;;;AAKA,MAAMA,UAAU,GAAgD;;EAE9D,QAAQ,GAFsD;;EAI9D,QAAQ,GAJsD;;EAO9DC,EAAE,EAAE,GAP0D;;EAS9DC,EAAE,EAAE,GAT0D;;EAW9DC,EAAE,EAAE,GAX0D;;EAa9DC,EAAE,EAAE,GAb0D;;EAe9DC,EAAE,EAAE;AAf0D,CAAhE;AAkBA;;;;;;;;;;;;;;;;;;;;SAmBgBC,mBACdC,WACAC,OACAC,OACAC;EAEA,IAAID,KAAJ,EAAW;IACT,OAAO,GAAP;;;;EAIF,IAAID,KAAK,IAAIE,OAAb,EAAsB;IACpB,OAAO,GAAP;;;EAGF,IAAIH,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAA0B;IACxB,MAAMC,gBAAgB,GAAGL,SAAS,CAAC,CAAD,CAAT,CAAaM,IAAb,EAAzB;;IAEA,IAAID,gBAAgB,CAACE,UAAjB,CAA4B,CAA5B,MAAmC;;MAAc;;;;;;MAOnD,OACEd,UAAU,CAACY,gBAAgB,CAACG,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAD;;SACVf,UAAU,CAACY,gBAAgB,CAACG,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAD,CADV,IAEA,GAHF;;;;;EASJ,OAAO,GAAP;AACD;;;;"}