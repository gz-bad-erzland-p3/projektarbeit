{"version":3,"file":"resolveStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX } from '../constants';\nimport {\n  GriffelStyle,\n  CSSClassesMap,\n  CSSRulesByBucket,\n  StyleBucketName,\n  GriffelAnimation,\n  CSSBucketEntry,\n} from '../types';\nimport { compileCSS, CompileCSSOptions } from './compileCSS';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { UNSUPPORTED_CSS_PROPERTIES } from '..';\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname!, rtlClassname] : ltrClassname;\n}\n\nfunction createBucketEntry(cssRule: string, metadata: Record<string, unknown> | undefined): CSSBucketEntry {\n  if (metadata) {\n    return [cssRule, metadata];\n  }\n\n  return cssRule;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string,\n  rtlCSS: string | undefined,\n  media: string | undefined,\n) {\n  let metadata: Record<string, unknown> | undefined;\n  if (styleBucketName === 'm' && media) {\n    metadata = { m: media };\n  }\n\n  cssRulesByBucket[styleBucketName] ??= [];\n  cssRulesByBucket[styleBucketName]!.push(createBucketEntry(ltrCSS, metadata));\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  selectors: string[] = [],\n  media = '',\n  layer = '',\n  support = '',\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          [\n            `@griffel/react: You are using unsupported shorthand CSS property \"${property}\". ` +\n              `Please check your \"makeStyles\" calls, there *should not* be following:`,\n            ' '.repeat(2) + `makeStyles({`,\n            ' '.repeat(4) + `[slot]: { ${property}: \"${styles[property as keyof GriffelStyle]}\" }`,\n            ' '.repeat(2) + `})`,\n            '',\n            'Learn why CSS shorthands are not supported: https://aka.ms/griffel-css-shorthands',\n          ].join('\\n'),\n        );\n      }\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selectors, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.toString(),\n        support,\n        selectors,\n        property,\n      });\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinition.value.toString(),\n            property: rtlDefinition.key,\n            selectors,\n            media,\n            layer,\n            support,\n          })\n        : undefined;\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        value,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n            media,\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        selectors,\n        media,\n        layer,\n        support,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const key = hashPropertyKey(selectors, media, support, property);\n      const className = hashClassName({\n        media,\n        layer,\n        value: value.map(v => (v ?? '').toString()).join(';'),\n        support,\n        selectors,\n        property,\n      });\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName({\n            value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n            property: rtlDefinitions[0].key,\n            selectors,\n            layer,\n            media,\n            support,\n          })\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, layer, media, support);\n      const [ltrCSS, rtlCSS] = compileCSS({\n        className,\n        media,\n        layer,\n        selectors,\n        property,\n        support,\n        value: value as Array<string | number>,\n        ...rtlCompileOptions,\n      });\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(cssRulesByBucket, styleBucketName, ltrCSS, rtlCSS, media);\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors.concat(normalizeNestedProperty(property)),\n          media,\n          layer,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          combinedMediaQuery,\n          layer,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (layer ? `${layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          combinedLayerQuery,\n          support,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(support, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          selectors,\n          media,\n          layer,\n          combinedSupportQuery,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.error(`Please fix the unresolved style rule: \\n ${property} \\n ${JSON.stringify(value, null, 2)}\"`);\n        }\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","createBucketEntry","cssRule","metadata","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","media","m","push","resolveStyleRules","styles","selectors","layer","support","cssClassesMap","rtlValue","property","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","process","env","NODE_ENV","console","error","repeat","join","value","key","hashPropertyKey","className","hashClassName","toString","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","undefined","rtlCompileOptions","rtlProperty","getStyleBucketName","compileCSS","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","length","warn","map","v","rtlDefinitions","rtlPropertyConsistent","some","d","isObject","isNestedSelector","concat","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","JSON","stringify"],"mappings":"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"}